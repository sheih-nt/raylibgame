Занятие 1: Введение в программирование и raylib
Продолжительность: 1,5 часа
Цель:

Познакомить учеников с основами программирования.
Настроить рабочую среду для разработки на raylib.
Написать и запустить первую простую программу с использованием raylib.
Структура занятия
1. Введение и знакомство (10 минут)
Знакомство с группой. Учитель кратко рассказывает о себе, своем опыте и целях курса.
Введение в программирование. Учитель задает вопросы, чтобы узнать уровень учеников:
"Кто уже пробовал программировать?"
"Какие игры вам нравятся и что вы хотите научиться создавать?"
Мотивация: Кратко объяснить, что за 10 занятий каждый из них сможет создать свою простую игру, управлять персонажами, рисовать графику и добавлять анимацию.
2. Что такое raylib? (5 минут)
Обзор raylib:
Что это? Это библиотека для разработки игр и графических приложений, которая упрощает процесс рисования объектов и работы с вводом.
Почему raylib? Потому что она простая, кроссплатформенная и идеально подходит для новичков.
Пример популярных игр, созданных с использованием библиотеки.
3. Установка и настройка среды разработки (25 минут)
Выбор среды разработки:

Рекомендуется использовать Visual Studio Code (VS Code) или другую простую IDE (например, Code::Blocks).
Если у учеников уже установлены программы, сразу переходим к следующему шагу.
Установка компилятора:

Для Windows: установка MinGW (GCC). Показать, как это сделать.
Для macOS и Linux: установка Xcode (macOS) или стандартных пакетов для компиляции (Linux).
Установка библиотеки raylib:

Скачивание и установка raylib с официального сайта.
Подключение библиотеки к проекту. Учитель помогает каждому ученику настроить проект так, чтобы можно было скомпилировать код с raylib.
Первый тестовый проект:

Создать новый проект в VS Code или другой IDE.
Подготовить стандартный файл main.c с подключенной библиотекой raylib.
Скомпилировать и запустить простую программу, которая открывает пустое окно.
c
Копировать код
#include "raylib.h"

int main() {
    InitWindow(800, 600, "Hello, raylib!"); // Создание окна 800x600
    while (!WindowShouldClose()) {
        BeginDrawing();
        ClearBackground(RAYWHITE);  // Установка белого фона
        DrawText("Hello, raylib!", 190, 280, 20, LIGHTGRAY);  // Вывод текста на экран
        EndDrawing();
    }
    CloseWindow();  // Закрытие окна
    return 0;
}
4. Основы программирования (20 минут)
Переменные и типы данных:

Что такое переменная? Пример создания переменных.
Основные типы данных: int, float, char, bool.
Операторы и выражения:

Основные операторы (арифметические, логические).
Пример простого выражения в коде (например, изменение координат объекта).
Циклы:

Принцип работы циклов. Что такое игровой цикл в raylib (while (!WindowShouldClose())).
Практическое задание: Ученики добавляют переменные в свою программу и изменяют текст, выводимый на экран, в зависимости от значений переменных.

5. Работа с клавиатурой и вводом (15 минут)
Знакомство с функциями для работы с клавишами:

Функции raylib для обработки ввода с клавиатуры (IsKeyDown, IsKeyPressed).
Практическое задание:

Добавить управление цветом фона с помощью клавиш. Например:
При нажатии R фон становится красным.
При нажатии G фон становится зеленым.
При нажатии B фон становится синим.
c
Копировать код
#include "raylib.h"

int main() {
    InitWindow(800, 600, "Change background color");

    Color bgColor = RAYWHITE;  // Начальный цвет фона

    while (!WindowShouldClose()) {
        if (IsKeyPressed(KEY_R)) bgColor = RED;  // Меняем фон на красный
        if (IsKeyPressed(KEY_G)) bgColor = GREEN;  // Меняем фон на зеленый
        if (IsKeyPressed(KEY_B)) bgColor = BLUE;  // Меняем фон на синий

        BeginDrawing();
        ClearBackground(bgColor);  // Используем переменную цвета фона
        DrawText("Press R, G, or B to change background color", 150, 280, 20, LIGHTGRAY);
        EndDrawing();
    }

    CloseWindow();
    return 0;
}
6. Практическая часть: создание первой программы (20 минут)
Задача: Ученик создает программу, где окно меняет цвет фона в зависимости от нажатых клавиш.
Учитель помогает и отвечает на вопросы.
По ходу выполнения задания учитель объясняет, как работает игровой цикл и отрисовка кадров.
7. Вопросы и обсуждение (10 минут)
Вопросы: Обсудить с учениками, что было непонятно.
Домашнее задание: Доработать программу — добавить новые цвета и возможно, экспериментировать с изменением размера окна или выводом разного текста в зависимости от клавиш.
8. Завершение (5 минут)
Итоги урока: Учитель подводит итог — ученики познакомились с raylib, научились создавать окна, управлять фоном с клавишами.
Краткий анонс следующего занятия: "На следующем уроке мы научимся рисовать формы и начнем работать с графикой!"
Домашнее задание
Цель: Закрепить полученные знания через самостоятельную практику.
Задание:
Изменить программу так, чтобы она реагировала на другие клавиши (например, A, S, D) и изменяла не только цвет фона, но и текст, выводимый на экран.
Если ученик справится с этим быстро, предложить дополнительное задание: сделать плавное изменение цвета фона, например, с помощью циклов или промежуточных значений RGB.
